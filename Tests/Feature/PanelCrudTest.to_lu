<?php

namespace Modules\Xot\Tests\Feature;

use Modules\LU\Models\Area;
use Modules\LU\Models\User;
use Modules\Xot\Services\PanelService;
use Nwidart\Modules\Facades\Module;
use Tests\TestCase;

class PanelCrudTest extends TestCase {
    //use RefreshDatabase;

    public function testUpdateAreas() {
        /**
         * prendo 3 moduli a caso.
         */
        $areas = Module::toCollection()
            ->map(function ($item) {
                $area = Area::where('area_define_name', $item->getName())->first();

                return optional($area)->area_id;
            })
            ->shuffle()
            ->take(3)
            ->all();

        //$user_data = User::factory()->raw();
        $user = User::inRandomOrder()->first();
        $user = User::where('handle', '90-24104')->first();

        echo '--'.$user->handle.'--';
        $data = [];
        //$data = collect($data)->only(['handle', 'first_name', 'last_name', 'email', 'passwd'])->all();
        $data['areas'] = [];
        $data['areas']['to'] = $areas;
        $panel = PanelService::get($user);
        //$this->assertTrue(true);
        $panel->update($data);

        $user_areas = $user->areas->map(function ($item) {
            return $item->area_id;
        })->all();

        $this->assertEquals(count($areas), count($user_areas));
        foreach ($areas as $area) {
            $this->assertContains($area, $user_areas);
        }
    }
}