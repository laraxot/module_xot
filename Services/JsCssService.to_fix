<?php

namespace Modules\Xot\Services;

use Assetic\Asset\AssetCache;
use Assetic\Asset\AssetCollection;
use Assetic\Asset\FileAsset;
use Assetic\Cache\FilesystemCache;
use Assetic\Filter\JsMinFilter;
use Illuminate\Support\Facades\File;

class JsCssService {
    public static function compressJs($scripts) {
        $scripts_list = \implode(',', $scripts);
        $scripts_md5 = \md5($scripts_list);

        $name = '/js/script_'.$scripts_md5.'.js';
        $path = public_path($name);
        $force = config('xra.force_rewrite_js');
        if (! \file_exists($path)) {
            require __DIR__.'/vendor/autoload.php';
            //$cache = new FilesystemCache($_SERVER['DOCUMENT_ROOT'] . '/tmp'); //cartella tmp non esiste piu'
            $cache = new \Assetic\Cache\FilesystemCache(base_path('../cache'));
            $collection = new AssetCollection();
            foreach ($scripts as $filePath) {
                $filePath = self::getRealFile($filePath);
                if ('http' == \mb_substr($filePath, 0, \mb_strlen('http'))) {
                    $filename = \md5($filePath).'.css';
                    if (! \Storage::disk('cache')->exists($filename)) {
                        \Storage::disk('cache')->put($filename, \fopen($filePath, 'r'));
                    }
                    $asset = new FileAsset(\Storage::disk('cache')->path($filename));
                } else {
                    $asset = new FileAsset($filePath);
                }
                if (\class_exists('JsMinFilter')) {
                    $asset->ensureFilter(new JsMinFilter());
                }

                $cachedAsset = new AssetCache($asset, $cache);
                $collection->add($cachedAsset);
            }//end foreach

            \File::put($path, $collection->dump());
        }//end if

        return $name;
    }

    //end compressJs

    public static function compressCss($styles) {
        $styles_list = \implode(',', $styles);
        $styles_md5 = \md5($styles_list);
        $name = '/css/style_'.$styles_md5.'.css';
        $path = public_path($name);

        //dd( storage_path('cache')); //pb\laravel\storage\cache
        //dd(\Storage::disk('cache')->url('file.jpg'));//getPath());
        if (! \file_exists($path)) {
            //$cache = new FilesystemCache($_SERVER['DOCUMENT_ROOT'] . '/tmp');
            //$cache = new FilesystemCache(dirname($path));
            require __DIR__.'/vendor/autoload.php'; //carico la mia libreria che uso solo qui..
            $cache = new FilesystemCache(base_path('../cache'));
            $collection = new AssetCollection();

            foreach ($styles as $filePath) {
                //echo '<br/>['.$filePath.']';
                $filePath = self::getRealFile($filePath);
                if (! \File::exists($filePath)) {
                    //echo '<h3> non esiste il file ['.$filePath.']</h3>';
                    //die('['.__LINE__.']['.__FILE__.']');

                    $not_compress[] = $filePath;
                } else {
                    $asset = new FileAsset($filePath);
                    $info = \pathinfo($filePath);
                    if (isset($info['extension'])) {
                        switch ($info['extension']) {
                            case 'scss':
                                $asset->ensureFilter(new ScssphpFilter());
                            break;
                        default:
                            $asset->ensureFilter(new CssMinFilter());
                        break;
                        }
                    }
                    $cachedAsset = new AssetCache($asset, $cache);
                    $collection->add($cachedAsset);
                }
            }

            $path = public_path().$name;

            File::put($path, $collection->dump());
        }

        return $name;
    }

    //end compressCss
}
